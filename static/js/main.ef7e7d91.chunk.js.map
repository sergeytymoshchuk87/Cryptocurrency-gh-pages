{"version":3,"sources":["components/Table.js","components/Coins.js","reducers/getCoin.js","epics/getEpic.js","components/App.js","store/store.js","index.js"],"names":["connect","state","coins","props","data","columns","name","cell","row","style","width","height","src","iconUrl","alt","sortable","selector","Math","floor","price","title","pagination","highlightOnHover","pointerOnHover","noDataComponent","backgroundColor","textAlign","onRowClicked","console","log","Coins","Fragment","getCoin","action","type","payload","fetchCoinEpic","action$","pipe","ofType","mergeMap","ajax","getJSON","map","response","setInterval","dispatch","className","rootReducer","combineReducers","rootEpic","combineEpics","epicMiddleware","createEpicMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","window","ReactDOM","render","document","getElementById"],"mappings":"oQA0EeA,eANS,SAACC,GACrB,MAAO,CACHC,MAAOD,EAAMC,SAINF,EArEC,SAACG,GACb,IAAIC,EAAO,GAMPA,EAJCD,EAAMD,MAAME,KAIND,EAAMD,MAAME,KAAKA,KAAKF,MAHtB,GAQX,IAAMG,EAAU,CACZ,CACIC,KAAM,OACNC,KAAM,SAAAC,GAAG,OAAI,yBAAKC,MAAO,CAACC,MAAO,OAAQC,OAAQ,QAASC,IAAKJ,EAAIK,QAASC,IAAI,MAChFJ,MAAO,OACPK,UAAU,GAEd,CACIT,KAAM,OACNU,SAAU,OACVD,UAAU,GAEd,CACIT,KAAM,QACNU,SAAU,SAAUR,GAEhB,MAAO,IADQS,KAAKC,MAAkB,IAAZV,EAAIW,OAAe,KAGjDJ,UAAU,GAGd,CACIT,KAAM,SACNU,SAAU,SACVD,UAAU,IAGlB,OAEI,kBAAC,IAAD,CACIK,MAAO,wBACPf,QAASA,EACTD,KAAMA,EACNiB,YAAU,EACVC,kBAAgB,EAChBC,gBAAc,EACdC,gBAAiB,aACjBf,MAAO,CACHgB,gBAAiB,UACjBC,UAAW,UAEfC,aAAc,WACVC,QAAQC,IAAI,eCzCbC,EAbD,WAEV,OACI,kBAAC,IAAMC,SAAP,KACI,6BACI,kBAAC,EAAD,S,gCCMDC,EAdC,WAAyB,IAAxB/B,EAAuB,uDAAf,GAAIgC,EAAW,uCACpC,OAAQA,EAAOC,MACX,IAAK,uBACD,OAAO,eACAjC,EADP,CAGIG,KAAM6B,EAAOE,UAGrB,QACI,OAAOlC,I,QCMJmC,EAVO,SAAAC,GAAO,OAAIA,EAAQC,KAErCC,YAAO,cACPC,aAAS,SAAAP,GAAM,OACXQ,IAAKC,QAAL,+CAA4DJ,KACxDK,aAAI,SAAAC,GAAQ,MDbsB,CAACV,KAAM,uBAAwBC,QCa9BS,YCIhC5C,G,MAAAA,eAXH,SAACG,GAIT,OAHA0C,aAAY,WACR1C,EAAM2C,SDFkB,CAAEZ,KAAM,iBCGjC,KAEC,yBAAKa,UAAU,aACX,kBAAC,EAAD,W,gCCNNC,EAAcC,0BAAgB,CAChC/C,MAAO8B,IAGLkB,EAAWC,YACbf,GAIEgB,EAAiBC,cAEjBC,EAAQC,sBAAYP,EAAaQ,8BAAoBC,0BAAgBL,KAC3EA,EAAeM,IAAIR,GAEJI,Q,MCXfK,OAAOL,MAAQA,EACfM,IAASC,OAAO,kBAAC,IAAD,CAAUP,MAAOA,GAAO,kBAAC,EAAD,OAAmBQ,SAASC,eAAe,W","file":"static/js/main.ef7e7d91.chunk.js","sourcesContent":["import React from \"react\";\r\nimport DataTable from 'react-data-table-component';\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst MyTable = (props) => {\r\n    let data = {};\r\n\r\n    if (!props.coins.data) {\r\n        data = {};\r\n\r\n    } else {\r\n        data = props.coins.data.data.coins;\r\n    }\r\n\r\n    //iconUrl\r\n\r\n    const columns = [\r\n        {\r\n            name: 'Icon',\r\n            cell: row => <img style={{width: '25px', height: '25px'}} src={row.iconUrl} alt=\"\"/>,\r\n            width: \"50px\",\r\n            sortable: false,\r\n        },\r\n        {\r\n            name: 'Name',\r\n            selector: 'name',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Price',\r\n            selector: function (row) {\r\n                const result = Math.floor(row.price * 100) / 100;\r\n                return \"$\" + result\r\n            },\r\n            sortable: true,\r\n\r\n        },\r\n        {\r\n            name: 'Change',\r\n            selector: 'change',\r\n            sortable: true,\r\n        }\r\n    ];\r\n    return (\r\n\r\n        <DataTable\r\n            title={\"Cryptocurrency prices\"}\r\n            columns={columns}\r\n            data={data}\r\n            pagination\r\n            highlightOnHover\r\n            pointerOnHover\r\n            noDataComponent={\"Loading...\"}\r\n            style={{\r\n                backgroundColor: \"#011e3e\",\r\n                textAlign: 'center'\r\n            }}\r\n            onRowClicked={function () {\r\n                console.log(\"click\")\r\n            }}\r\n            //noHeader\r\n\r\n        />\r\n    );\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        coins: state.coins\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(MyTable)\r\n","import React from \"react\";\r\nimport MyTable from \"./Table\";\r\n\r\n\r\n\r\nconst Coins = () => {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div>\r\n                <MyTable/>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n};\r\n\r\n\r\n\r\nexport default Coins;\r\n","export const fetchUserFulfilled = payload => ({type: \"FETCH_USER_FULFILLED\", payload});\r\n\r\nconst getCoin = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case \"FETCH_USER_FULFILLED\":\r\n            return {\r\n                ...state,\r\n                // `login` is the username\r\n                data: action.payload\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default getCoin;","import React,{useEffect} from \"react\";\r\nimport {ajax} from \"rxjs/ajax\";\r\nimport {map, mergeMap} from \"rxjs/operators\";\r\nimport {fetchUserFulfilled} from \"../reducers/getCoin\";\r\nimport {ofType} from \"redux-observable\";\r\n\r\nexport const fetchUser = () => ({ type: 'FETCH_USER' });\r\n\r\nconst fetchCoinEpic = action$ => action$.pipe(\r\n\r\n    ofType('FETCH_USER'),\r\n    mergeMap(action =>\r\n        ajax.getJSON(`https://api.coinranking.com/v1/public/coins`).pipe(\r\n            map(response => fetchUserFulfilled(response))\r\n        )\r\n    )\r\n);\r\n\r\nexport default fetchCoinEpic;","import React from \"react\";\r\nimport Coins from \"./Coins\";\r\nimport {connect} from \"react-redux\";\r\nimport {fetchUser} from \"../epics/getEpic\";\r\nimport './App.css'\r\n\r\nconst App = (props) => {\r\n    setInterval(() => {\r\n        props.dispatch(fetchUser())\r\n    }, 2000)\r\n    return (\r\n        <div className=\"container\">\r\n            <Coins/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect()(App)\r\n\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {combineEpics, createEpicMiddleware} from \"redux-observable\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\nimport fetchCoinEpic from \"../epics/getEpic\";\r\nimport getCoin from \"../reducers/getCoin\";\r\n\r\nconst rootReducer = combineReducers({\r\n    coins: getCoin\r\n})\r\n\r\nconst rootEpic = combineEpics(\r\n    fetchCoinEpic\r\n)\r\n\r\n\r\nconst epicMiddleware = createEpicMiddleware();\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(epicMiddleware)));\r\nepicMiddleware.run(rootEpic);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport {Provider} from 'react-redux';\nimport store from './store/store'\n\nimport './index.css'\n\n\nwindow.store = store;\nReactDOM.render(<Provider store={store}><App/></Provider>, document.getElementById('root'));\n\n\n"],"sourceRoot":""}